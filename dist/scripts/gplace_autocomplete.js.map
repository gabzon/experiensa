{"version":3,"sources":["../assets/scripts/gplace_autocomplete.js"],"names":["getSiteLanguage","callback","jQuery","ajax","type","url","sage_vars","ajaxurl","data","action","async","success","response","language","error","request","console","log","JSON","stringify","document","ready","$","input","getElementsByClassName","autocomplete","google","maps","places","Autocomplete","addListener","place","getPlace","geometry","photos","i","length","push","getUrl","maxWidth","maxHeight","phone_number","international_phone_number","vicinity","rating","utc_offset","website","reviews","place_data","name","place_id","address","formatted_address","location","latitude","lat","longitude","lng","types","map_url","place_string","place_input","val","wikiApiURL","source","dataType","format","search","term","focus","e","ui","item","label","select"],"mappings":"AAAA,QAAAA,iBAAAC,GACAC,OAAAC,MACAC,KAAA,OACAC,IAAAC,UAAAC,QACAC,MACAC,OAAA,mBAEAC,OAAA,EACAC,QAAA,SAAAC,GACAX,EAAAW,EAAAC,WAEAC,MAAA,SAAAC,EAAAD,GACAE,QAAAC,IAAA,YAAAC,KAAAC,UAAAJ,IACAC,QAAAC,IAAA,UAAAC,KAAAC,UAAAL,OAoBAZ,OAAAkB,UAAAC,MAAA,SAAAC,GAEA,GAAAC,GACAH,SAAAI,uBAAA,uBAAA,GACAC,EAAA,GAAAC,QAAAC,KAAAC,OAAAC,aAAAN,EACAE,GAAAK,YAAA,gBAAA,WACA,GAAAC,GAAAN,EAAAO,UACA,KAAAD,EAAAE,SAEA,WADAjB,SAAAC,IAAA,qDAGAD,SAAAC,IAAAc,EACA,IAAAG,KACA,IAAA,mBAAAH,GAAAG,OACA,IAAA,GAAAC,GAAA,EAAAA,EAAAJ,EAAAG,OAAAE,OAAAD,IACAD,EAAAG,KAAAN,EAAAG,OAAAC,GAAAG,QAAAC,SAAA,KAAAC,UAAA,MAGA,IAAAC,GAAA,EACA,oBAAAV,GAAAW,6BACAD,EAAAV,EAAAW,2BAEA,IAAAC,GAAA,EACA,oBAAAZ,GAAAY,WACAA,EAAAZ,EAAAY,SAEA,IAAAC,GAAA,EACA,oBAAAb,GAAAa,SACAA,EAAAb,EAAAa,OAEA,IAAAC,GAAA,EACA,oBAAAd,GAAAc,aACAA,EAAAd,EAAAc,WAEA,IAAAC,GAAA,EACA,oBAAAf,GAAAe,UACAA,EAAAf,EAAAe,QAEA,IAAAC,KACA,oBAAAhB,GAAAgB,UACAA,EAAAhB,EAAAgB,QAEA,IAAAC,IACAC,KAAAlB,EAAAkB,KACAC,SAAAnB,EAAAmB,SACAC,QAAApB,EAAAqB,kBACAC,UACAC,SAAAvB,EAAAE,SAAAoB,SAAAE,MACAC,UAAAzB,EAAAE,SAAAoB,SAAAI,OAEAC,MAAA3B,EAAA2B,MACAxB,OAAAA,EACAyB,QAAA5B,EAAA1B,IACAoC,aAAAA,EACAE,SAAAA,EACAC,OAAAA,EACAC,WAAAA,EACAC,QAAAA,EACAC,QAAAA,EAEA/B,SAAAC,IAAA+B,EACA,IAAAY,GAAA1C,KAAAC,UAAA6B,GAEAa,EAAAvC,EAAA,kDACAuC,GAAAC,IAAAF,IAEA,IAAA/C,GAAA,IACAb,iBAAA,SAAAY,GACAC,EAAAD,GAEA,IAAAmD,GAAA,UAAAlD,EAAA,0BAEAS,GAAA,wBAAAG,cACAuC,OAAA,SAAAjD,EAAAH,GACAU,EAAAnB,MACAE,IAAA0D,EACAE,SAAA,QACAzD,MACAC,OAAA,aACAyD,OAAA,OACAC,OAAApD,EAAAqD,MAEAzD,QAAA,SAAAH,GACAI,EAAAJ,EAAA,QAKA6D,MAAA,SAAAC,EAAAC,GAEA,MADAjD,GAAA,wBAAAwC,IAAAS,EAAAC,KAAAC,QACA,GAEAC,OAAA,SAAAJ,EAAAC,GAGA,MADAvD,SAAAC,IAAAsD,IACA","file":"gplace_autocomplete.js","sourcesContent":["function getSiteLanguage(callback){\n    jQuery.ajax({\n        type:\"POST\",\n        url: sage_vars.ajaxurl,\n        data:{\n            'action': 'requestLanguage'\n        },\n        async: false,\n        success:function(response){\n            callback(response.language);\n        },\n        error: function(request, error) {\n            console.log(\"Request: \" + JSON.stringify(request));\n            console.log(\"Error: \" + JSON.stringify(error));\n        }\n    });\n}\n/*function createWikiObject(labels,texts,links){\n    var response = [];\n    var len = labels.length;\n    for (var i = 0; i < len; i++) {\n        item = {\n            item: {\n                label: labels[i],\n                value: labels[i],\n                text: texts[i],\n                link: links[i]\n            }\n        };\n        response.push(item);\n    }\n    return response;\n}*/\njQuery(document).ready(function ($) {\n    // $(\"#title-prompt-text\").html('');\n    var input = /** @type {!HTMLInputElement} */(\n        document.getElementsByClassName('search-google-place')[0]);\n    var autocomplete = new google.maps.places.Autocomplete(input);\n    autocomplete.addListener('place_changed', function () {\n        var place = autocomplete.getPlace();\n        if (!place.geometry) {\n            console.log(\"Autocomplete's returned place contains no geometry\");\n            return;\n        }\n        console.log(place);\n        var photos = [];\n        if (typeof place.photos !== \"undefined\") {\n            for(var i=0;i<place.photos.length;i++){\n                photos.push(place.photos[i].getUrl({ 'maxWidth': 1024, 'maxHeight': 768 }));\n            }\n        }\n        var phone_number = '';\n        if(typeof place.international_phone_number !== \"undefined\") {\n            phone_number = place.international_phone_number;\n        }\n        var vicinity = '';\n        if(typeof place.vicinity !== \"undefined\") {\n            vicinity = place.vicinity;\n        }\n        var rating = '';\n        if(typeof place.rating !== \"undefined\") {\n            rating = place.rating;\n        }\n        var utc_offset = '';\n        if(typeof place.utc_offset !== \"undefined\") {\n            utc_offset = place.utc_offset;\n        }\n        var website = '';\n        if(typeof place.website !== \"undefined\") {\n            website = place.website;\n        }\n        var reviews = [];\n        if(typeof place.reviews !== \"undefined\") {\n            reviews = place.reviews;\n        }\n        var place_data = {\n            name: place.name,\n            place_id: place.place_id,\n            address: place.formatted_address,\n            location: {\n                latitude: place.geometry.location.lat(),\n                longitude: place.geometry.location.lng()\n            },\n            types: place.types,\n            photos: photos,\n            map_url: place.url,\n            phone_number: phone_number,\n            vicinity: vicinity,\n            rating: rating,\n            utc_offset: utc_offset,\n            website: website,\n            reviews: reviews\n        };\n        console.log(place_data);\n        var place_string = JSON.stringify(place_data);\n        // $('#_post_meta_place_api_data_0').val(place_string);\n        var place_input = $('input[name=\"_post_meta[place_api_data]\"]:hidden');\n        place_input.val(place_string);\n    });\n    var language = 'en';\n    getSiteLanguage(function(response){\n        language = response;\n    });\n    var wikiApiURL = 'http://'+language+'.wikipedia.org/w/api.php';\n\n    $(\".search-wiki-article\").autocomplete({\n        source: function(request, response) {\n            $.ajax({\n                url: wikiApiURL,\n                dataType: \"jsonp\",\n                data: {\n                    'action': \"opensearch\",\n                    'format': \"json\",\n                    'search': request.term\n                },\n                success: function(data) {\n                    response(data[1]);\n                    // console.log(data);\n                }\n            });\n        },\n        focus: function( e, ui ) {\n            $( \".search-wiki-article\" ).val( ui.item.label );\n            return false;\n        },\n        select: function(e, ui){\n            // console.log('se ha seleccionado');\n            console.log(ui);\n            return false;\n        }\n    });\n});"],"sourceRoot":"assets/scripts/"}